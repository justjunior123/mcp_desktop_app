generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String?      @unique
  chatSessions ChatSession[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Settings {
  id          String   @id @default(uuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MCPServer {
  id          String   @id @default(uuid())
  name        String
  status      String   @default("stopped") // running, stopped, error
  port        Int
  host        String   @default("localhost")
  maxRequests Int      @default(10)
  timeout     Int      @default(30000)
  model       OllamaModel @relation(fields: [modelId], references: [id])
  modelId     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OllamaModel {
  id          String   @id @default(cuid())
  name        String   @unique
  size        BigInt
  digest      String
  format      String
  family      String
  parameters  Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Model status
  isDownloaded Boolean  @default(false)
  downloadProgress Float @default(0)
  status      String   @default("NOT_DOWNLOADED") // NOT_DOWNLOADED, DOWNLOADING, READY, ERROR
  error       String?

  // Model configuration
  configuration OllamaModelConfiguration?

  // Relations
  chatSessions ChatSession[]
  servers      MCPServer[]
}

model OllamaModelConfiguration {
  id          String   @id @default(cuid())
  modelId     String   @unique
  model       OllamaModel @relation(fields: [modelId], references: [id], onDelete: Cascade)
  
  // Default generation parameters
  temperature Float?   @default(0.7)
  topP        Float?   @default(0.9)
  topK        Int?     @default(40)
  repeatPenalty Float? @default(1.1)
  presencePenalty Float?
  frequencyPenalty Float?
  stopSequences String   @default("[]") // JSON array of stop sequences
  maxTokens   Int?
  
  // System configuration
  systemPrompt String?
  contextWindow Int?
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ChatSession {
  id          String   @id @default(cuid())
  name        String?
  modelId     String
  model       OllamaModel @relation(fields: [modelId], references: [id])
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  messages    Message[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id            String   @id @default(cuid())
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)
  role          String   // system, user, assistant
  content       String
  createdAt     DateTime @default(now())
  
  // Generation metadata
  totalDuration Int?
  loadDuration  Int?
  promptEvalDuration Int?
  evalDuration  Int?
} 